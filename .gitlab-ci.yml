stages:
  - build
  - test
build image:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

build file:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  image: python:3.11
  variables:
    PYTHON_VERSION: '3.11'
  script:
    - pip3 install poetry
    - poetry config virtualenvs.create true
    - poetry install
    - source .venv/bin/activate

test_file:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - make pytest
  dependencies:
    - build file
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

lint_file:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - make lint
  dependencies:
    - build file

check codestyle:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - make check-codestyle
  dependencies:
    - build file

